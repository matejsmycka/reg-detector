<ApplicationDef>
	<Application>
		<!-- NOTE: To Package this software correctly, the Packaging script will need to be run as Administrator -->
		<Name>Java JRE</Name>
		<Description></Description>
		<Publisher>Oracle</Publisher>
		<AutoInstall>True</AutoInstall>
		<UserDocumentation>https://java.com/en/download/manual.jsp</UserDocumentation>
		<Icon>Java.png</Icon>
	</Application>
	<Downloads>
		<Download DeploymentType="DeploymentType1">
			<PrefetchScript>$URL = (((Invoke-WebRequest https://www.oracle.com/cz/java/technologies/javase-jre8-downloads.html)|Select-Object -ExpandProperty links | Where-Object -Property "data-file" -like "*windows-x64.exe")."data-file")</PrefetchScript>
			<URL></URL>
			<DownloadFileName>JavaJREx64.exe</DownloadFileName>
			<AppRepoFolder>x64</AppRepoFolder>
			<Version></Version>
			<FullVersion></FullVersion>
			<DownloadVersionCheck>
			Add-LogContent "Running Version Check on Java JRE x64"
			#Remove-Item "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\" -Force -Recurse -ErrorAction SilentlyContinue
			#Remove-Item "$TempDir\JavaJREx64\" -Force -Recurse -ErrorAction SilentlyContinue
			$FullVersion = (Get-Item $TempDir\$DownloadFileName).VersionInfo.FileVersion
			$Version = "$($FullVersion[0])u$($FullVersion.Split(".")[2].substring(0,3))"
			$JavaFileName = "jre1.$($Fullversion.Substring(0,3))_$($FullVersion.Split(".")[2].substring(0,3))64.msi"
			$JavaProc = Start-Process $TempDir\$DownloadFileName -PassThru
			for ($i=0;$i -lt 120; $i++){
				if (Test-Path "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\jre1*\*.msi"){
					New-Item -ItemType Directory -Path "$TempDir\JavaJREx64" -Force
					Copy-Item "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\jre1*\*" -Destination $TempDir\JavaJREx64\ -Force
					Rename-Item "$TempDir\JavaJREx64\$JavaFileName" -NewName JavaJREx64.msi -Force
					break
				}
				sleep 1
			}
			Get-Process "Java*JRE*" | Stop-Process
			Add-LogContent "Waiting for Java Process to exit"
			for ($i=0;$i -lt 120; $i++){
				if (-not (Test-Path "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\JAVA_INSTALL_FLAG")){
					break
				}
				sleep 1
			}
			Add-LogContent "Finished Checking Version for Java JRE x64"
			</DownloadVersionCheck>
			<ExtraCopyFunctions>
			Copy-Item "$TempDir\JavaJREx64\*.*" -Destination $DestinationPath\ -force
			Remove-Item "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\" -Force -Recurse -ErrorAction SilentlyContinue
			Remove-Item "$TempDir\JavaJREx64\" -Force -Recurse -ErrorAction SilentlyContinue
			</ExtraCopyFunctions>
		</Download>
		<Download DeploymentType="DeploymentType2">
			<PrefetchScript>$URL = (((Invoke-WebRequest https://www.oracle.com/cz/java/technologies/javase-jre8-downloads.html)|Select-Object -ExpandProperty links | Where-Object -Property "data-file" -like "*windows-i586.exe")."data-file")</PrefetchScript>
			<URL></URL>
			<DownloadFileName>JavaJREx86.exe</DownloadFileName>
			<AppRepoFolder>x86</AppRepoFolder>
			<Version></Version>
			<FullVersion></FullVersion>
			<DownloadVersionCheck>
			Add-LogContent "Running Version Check on Java JRE x86"
			Remove-Item "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\" -Force -Recurse -ErrorAction SilentlyContinue
			Remove-Item "$TempDir\JavaJREx86\" -Force -Recurse -ErrorAction SilentlyContinue
			$FullVersion = (Get-Item $TempDir\$DownloadFileName).VersionInfo.FileVersion
			$Version = "$($FullVersion[0])u$($FullVersion.Split(".")[2].substring(0,3))"
			$JavaFileName = "jre1.$($Fullversion.Substring(0,3))_$($FullVersion.Split(".")[2].substring(0,3)).msi"
			$JavaProc = Start-Process $TempDir\$DownloadFileName -PassThru
			for ($i=0;$i -lt 120; $i++){
				if (Test-Path "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\jre1*\*.msi"){
					New-Item -ItemType Directory -Path "$TempDir\JavaJREx86" -Force
					Copy-Item "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\jre1*\*" -Destination "$TempDir\JavaJREx86\" -Force
					Rename-Item "$TempDir\JavaJREx86\$JavaFileName" -NewName JavaJREx86.msi -Force
					break
				}
				sleep 1
			}
			Get-Process "Java*JRE*" | Stop-Process
			Add-LogContent "Waiting for Java Process to exit"
			for ($i=0;$i -lt 120; $i++){
				if (-not (Test-Path "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\JAVA_INSTALL_FLAG")){
					break
				}
				sleep 1
			}
			Add-LogContent "Finished Checking Version for Java JRE x86"
			</DownloadVersionCheck>
			<ExtraCopyFunctions>
			Copy-Item "$TempDir\JavaJREx86\*.*" -Destination $DestinationPath\ -Force
			Remove-Item "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\" -Force -Recurse -ErrorAction SilentlyContinue
			Remove-Item "$TempDir\JavaJREx86\" -Force -Recurse -ErrorAction SilentlyContinue
			</ExtraCopyFunctions>
		</Download>
	</Downloads>
	<DeploymentTypes>
		<DeploymentType Name="DeploymentType1">
			<DeploymentTypeName>JRE Silent Install x64</DeploymentTypeName>
			<InstallationType>MSI</InstallationType>
			<Comments>Silent Installer for Java JRE</Comments>
			<Language>English</Language>
			<CacheContent>False</CacheContent>
			<BranchCache>True</BranchCache>
			<ContentFallback>True</ContentFallback>
			<OnSlowNetwork>Download</OnSlowNetwork>
			<InstallationMSI>JavaJREx64.msi</InstallationMSI>
			<UninstallCmd></UninstallCmd>
			<Force32bit>False</Force32bit>
			<InstallationBehaviorType>InstallForSystem</InstallationBehaviorType>
			<LogonReqType>WhetherOrNotUserLoggedOn</LogonReqType>
			<UserInteractionMode>Hidden</UserInteractionMode>
			<ReqUserInteraction>False</ReqUserInteraction>
			<EstRuntimeMins>15</EstRuntimeMins>
			<MaxRuntimeMins>60</MaxRuntimeMins>
			<RebootBehavior>BasedOnExitCode</RebootBehavior>
			<DetectionMethodType>MSI</DetectionMethodType>
			<Requirements>
				<RuleName>OS Architecture x64</RuleName>
			</Requirements>
		</DeploymentType>
		<DeploymentType Name="DeploymentType2">
			<DeploymentTypeName>JRE Silent Install x86</DeploymentTypeName>
			<InstallationType>MSI</InstallationType>
			<Comments>Silent Installer for Java JRE</Comments>
			<Language>English</Language>
			<CacheContent>False</CacheContent>
			<BranchCache>True</BranchCache>
			<ContentFallback>True</ContentFallback>
			<OnSlowNetwork>Download</OnSlowNetwork>
			<InstallationMSI>JavaJREx86.msi</InstallationMSI>
			<UninstallCmd></UninstallCmd>
			<Force32bit>False</Force32bit>
			<InstallationBehaviorType>InstallForSystem</InstallationBehaviorType>
			<LogonReqType>WhetherOrNotUserLoggedOn</LogonReqType>
			<UserInteractionMode>Hidden</UserInteractionMode>
			<ReqUserInteraction>False</ReqUserInteraction>
			<EstRuntimeMins>15</EstRuntimeMins>
			<MaxRuntimeMins>60</MaxRuntimeMins>
			<RebootBehavior>BasedOnExitCode</RebootBehavior>
			<DetectionMethodType>MSI</DetectionMethodType>
		</DeploymentType>
	</DeploymentTypes>
	<Distribution>
		<DistributeContent>True</DistributeContent>
	</Distribution>
	<Deployments TestFirst="True">
		<Deployment type="Test">
			<DeploySoftware>True</DeploySoftware>
			<DeployAction>Install</DeployAction>
			<DeployPurpose>Required</DeployPurpose>
			<UserNotification>DisplaySoftwareCenterOnly</UserNotification>
			<DeploymentCollection>WKS - SD - JavaRE - TEST</DeploymentCollection>
		</Deployment>
		<Deployment>
			<DeploySoftware>True</DeploySoftware>
			<DeployAction>Install</DeployAction>
			<DeployPurpose>Available</DeployPurpose>
			<UserNotification>DisplaySoftwareCenterOnly</UserNotification>
			<DeploymentCollection>WKS - SD - JavaRE - Available</DeploymentCollection>
		</Deployment>
		<Deployment>
			<DeploySoftware>True</DeploySoftware>
			<DeployAction>Install</DeployAction>
			<DeployPurpose>Required</DeployPurpose>
			<UserNotification>DisplaySoftwareCenterOnly</UserNotification>
			<DeploymentCollection>WKS - SD - JavaRE - Required</DeploymentCollection>
		</Deployment>
	</Deployments>
</ApplicationDef>