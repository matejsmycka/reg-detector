<ApplicationDef>
	<Application>
		<!-- NOTE: To Package this software correctly, the Packaging script will need to be run as Administrator -->
		<Name>Java JDK</Name>
		<Description>Includes both 64bit and 32bit Java Platform, Standard Edition Development Kit (JDK). The JDK is a development environment for building applications, applets, and components using the Java programming language. The JDK includes tools useful for developing and testing programs written in the Java programming language and running on the Java platform.</Description>
		<Publisher>Oracle</Publisher>
		<AutoInstall>True</AutoInstall>
		<UserDocumentation>http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</UserDocumentation>
		<Icon>Java.ico</Icon>
	</Application>
	<Downloads>
		<Download DeploymentType="DeploymentType1">
			<PrefetchScript>
			Add-Logcontent "Downloading JavaJDKx64"
			$ProgressPreference = SilentlyContinue
$request = Invoke-WebRequest http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html
$dnlds = ($request.Scripts | where innerHTML -like "*var downloads = new Array();*").InnerHTML

$DLs = @()
$dnlds.split("`n") | foreach {
 if ($_ -like "*windows x64*"){
    $DLs += $_
    }
 }
$DL= $DLs[0]
$start = $DL.IndexOf('http://')
$end = $DL.LastIndexOf('.exe')
$URI = $DL.Substring($start,$end-$start+4)
$URI

$Webclient = New-Object System.Net.WebClient
$Webclient.Headers.add('cookie','oraclelicense=accept-securebackup-cookie')
$Webclient.DownloadFile($uri,$DownloadFile)
Remove-Item "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\" -Force -Recurse -ErrorAction SilentlyContinue
Add-LogContent "Finished Download for Java JDK x64"</PrefetchScript>
			<URL></URL>
			<DownloadFileName>JavaJDKx64.exe</DownloadFileName>
			<AppRepoFolder>x64</AppRepoFolder>
			<Version></Version>
			<FullVersion></FullVersion>
			<DownloadVersionCheck>
			Add-LogContent "Running Version Check on Java JDK x64"
			Remove-Item "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\" -Force -Recurse -ErrorAction SilentlyContinue
			Remove-Item "$TempDir\JavaJDKx64\" -Force -Recurse -ErrorAction SilentlyContinue
			$FullVersion = (Get-Item $TempDir\$DownloadFileName).VersionInfo.FileVersion
			$Version = "$($FullVersion[0])u$($FullVersion.Split(".")[2].substring(0,3))"
			$JavaFileName = "jdk1.$($Fullversion.Substring(0,3))_$($FullVersion.Split(".")[2].substring(0,3))64.msi"
			Add-LogContent "Waiting for Java MSI to be extracted"
			$JavaProc = Start-Process $TempDir\$DownloadFileName -PassThru
			for ($i=0;$i -lt 120; $i++){
				if (Test-Path "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\jdk1*\*.msi"){
					Add-LogContent "jdk found"
					New-Item -ItemType Directory -Path "$TempDir\JavaJDKx64" -Force -ErrorAction SilentlyContinue
					copy-item "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\jdk1*64\*.*" -Destination $TempDir\JavaJDKx64\ -Force -ErrorAction SilentlyContinue
					Rename-Item "$TempDir\JavaJDKx64\$JavaFileName" -NewName JavaJDKx64.msi -Force -ErrorAction SilentlyContinue
					break
				}
				sleep 1
			}
			Get-Process -Name "JavaJDK*" | Stop-Process
			Get-Process "msiexec*" | where MainWindowTitle -Like "*java*" |Stop-Process
			Add-LogContent "Waiting for Java Installer to Exit"
			for ($i=0;$i -lt 120; $i++){
				if (-not (Test-Path "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\JAVA_INSTALL_FLAG")){
					break
				}
				sleep 1
			}
			Add-LogContent "Finished Checking Version for Java JDK x64"
			</DownloadVersionCheck>
			<ExtraCopyFunctions>Copy-Item $TempDir\JavaJDKx64\*.* -Destination $DestinationPath\ -Force
			Remove-Item "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\" -Force -Recurse -ErrorAction SilentlyContinue
			Remove-Item "$TempDir\JavaJDKx64\" -Force -Recurse -ErrorAction SilentlyContinue
			</ExtraCopyFunctions>
		</Download>
		<Download DeploymentType="DeploymentType2">
			<PrefetchScript>
			Add-Logcontent "Downloading JavaJDKx86"
$request = Invoke-WebRequest http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html
$dnlds = ($request.Scripts | where innerHTML -like "*var downloads = new Array();*").InnerHTML

$DLs = @()
$dnlds.split("`n") | foreach {
 if ($_ -like "*windows x86*"){
    $DLs += $_
    }
 }
$DL= $DLs[0]
$start = $DL.IndexOf('http://')
$end = $DL.LastIndexOf('.exe')
$URI = $DL.Substring($start,$end-$start+4)
$URI

$Webclient = New-Object System.Net.WebClient
$Webclient.Headers.add('cookie','oraclelicense=accept-securebackup-cookie')
$Webclient.DownloadFile($uri,$DownloadFile)
Remove-Item "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\" -Force -Recurse -ErrorAction SilentlyContinue
Add-LogContent "Finished Download for Java JDK x86"
</PrefetchScript>
			<URL></URL>
			<DownloadFileName>JavaJDKx86.exe</DownloadFileName>
			<AppRepoFolder>x86</AppRepoFolder>
			<Version></Version>
			<FullVersion></FullVersion>
			<DownloadVersionCheck>
			Add-LogContent "Running Version Check on Java JDK x86"
			Remove-Item "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\" -Force -Recurse -ErrorAction SilentlyContinue
			Remove-Item "$TempDir\JavaJDKx86" -Force -Recurse -ErrorAction SilentlyContinue
			$FullVersion = (Get-Item $TempDir\$DownloadFileName).VersionInfo.FileVersion
			$Version = "$($FullVersion[0])u$($FullVersion.Split(".")[2].substring(0,3))"
			$JavaFileName = "jdk1.$($Fullversion.Substring(0,3))_$($FullVersion.Split(".")[2].substring(0,3)).msi"
			$JavaProc = Start-Process $TempDir\$DownloadFileName -PassThru
			Add-LogContent "Waiting for Java MSI to be extracted"
			for ($i=0;$i -lt 120; $i++){
				if (Test-Path "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\jdk1*"){
					New-Item -ItemType Directory -Path "$TempDir\JavaJDKx86" -Force -ErrorAction SilentlyContinue
					Copy-Item "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\jdk1*\*.*" -Destination $TempDir\JavaJDKx86 -Force -ErrorAction SilentlyContinue
					Rename-Item "$TempDir\JavaJDKx86\$JavaFileName" -NewName JavaJDKx86.msi -Force -ErrorAction SilentlyContinue
					break
				}
				sleep 1
			}
			Get-Process -Name "JavaJDK*" | Stop-Process
			Get-Process "msiexec*" | where MainWindowTitle -Like "*java*" |Stop-Process
			Add-LogContent "Waiting for Java Process to exit"
			for ($i=0;$i -lt 120; $i++){
				if (-not (Test-Path "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\JAVA_INSTALL_FLAG")){
					break
				}
				sleep 1
			}
			Add-LogContent "Finished Checking Version for Java JDK x86"
			</DownloadVersionCheck>
			<ExtraCopyFunctions>Copy-Item $TempDir\JavaJDKx86\*.* -Destination $DestinationPath\ -Force
			Remove-Item "$env:USERPROFILE\AppData\LocalLow\Oracle\Java\" -Force -Recurse -ErrorAction SilentlyContinue
			Remove-Item "$TempDir\JavaJDKx86" -Force -Recurse -ErrorAction SilentlyContinue
			</ExtraCopyFunctions>
		</Download>
	</Downloads>
	<DeploymentTypes>
		<DeploymentType Name="DeploymentType1">
			<DeploymentTypeName>JDK Silent Install x64</DeploymentTypeName>
			<InstallationType>MSI</InstallationType>
			<Comments>Silent Installer for Java JDK</Comments>
			<Language>English</Language>
			<CacheContent>False</CacheContent>
			<BranchCache>True</BranchCache>
			<ContentFallback>True</ContentFallback>
			<OnSlowNetwork>Download</OnSlowNetwork>
			<InstallationMSI>JavaJDKx64.msi</InstallationMSI>
			<UninstallCmd></UninstallCmd>
			<Force32bit>False</Force32bit>
			<InstallationBehaviorType>InstallForSystem</InstallationBehaviorType>
			<LogonReqType>WhetherOrNotUserLoggedOn</LogonReqType>
			<UserInteractionMode>Hidden</UserInteractionMode>
			<ReqUserInteraction>False</ReqUserInteraction>
			<EstRuntimeMins>15</EstRuntimeMins>
			<MaxRuntimeMins>30</MaxRuntimeMins>
			<RebootBehavior>BasedOnExitCode</RebootBehavior>
			<DetectionMethodType>MSI</DetectionMethodType>
			<Requirements>
				<RuleName>OS Architecture x64</RuleName>
			</Requirements>
		</DeploymentType>
		<DeploymentType Name="DeploymentType2">
			<DeploymentTypeName>JDK Silent Install x86</DeploymentTypeName>
			<InstallationType>MSI</InstallationType>
			<Comments>Silent Installer for Java JDK</Comments>
			<Language>English</Language>
			<CacheContent>False</CacheContent>
			<BranchCache>True</BranchCache>
			<ContentFallback>True</ContentFallback>
			<OnSlowNetwork>Download</OnSlowNetwork>
			<InstallationMSI>JavaJDKx86.msi</InstallationMSI>
			<UninstallCmd></UninstallCmd>
			<Force32bit>False</Force32bit>
			<InstallationBehaviorType>InstallForSystem</InstallationBehaviorType>
			<LogonReqType>WhetherOrNotUserLoggedOn</LogonReqType>
			<UserInteractionMode>Hidden</UserInteractionMode>
			<ReqUserInteraction>False</ReqUserInteraction>
			<EstRuntimeMins>15</EstRuntimeMins>
			<MaxRuntimeMins>30</MaxRuntimeMins>
			<RebootBehavior>BasedOnExitCode</RebootBehavior>
			<DetectionMethodType>MSI</DetectionMethodType>			
			<Requirements>
				<RuleName>OS Architecture x86</RuleName>
			</Requirements>
		</DeploymentType>
	</DeploymentTypes>
	<Distribution>
		<DistributeContent>False</DistributeContent>
		<DistributeToGroup></DistributeToGroup>
	</Distribution>
	<Deployment>
		<DeploySoftware>False</DeploySoftware>
		<DeploymentCollection></DeploymentCollection>
	</Deployment>
</ApplicationDef>